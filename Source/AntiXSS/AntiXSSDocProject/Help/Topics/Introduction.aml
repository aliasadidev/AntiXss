<?xml version="1.0" encoding="utf-8"?>
<topic id="039e984c-748f-4241-930c-1d59a2bcc4b8" revisionNumber="0">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>
        This topic provides introduction to Microsoft Anti-Cross Site Scripting (Anti-XSS) Library.
      </para>
    </introduction>
    <section>
      <title>What is Anti-XSS Library?</title>
      <content>
        <para>
          The <ui>Microsoft Anti-Cross Site Scripting Library V3.0</ui> (Anti-XSS V3.0) is an encoding library designed to help developers protect their ASP.NET web-based applications from XSS attacks. It differs from most encoding libraries in that it uses the white-listing technique -- sometimes referred to as the principle of inclusions -- to provide protection against XSS attacks.  This approach works by first defining a valid or allowable set of characters, and encodes anything outside this set (invalid characters or potential attacks).  The white-listing approach provides several advantages over other encoding schemes.
        </para>
        <para>
          Anti-XSS Version 3.0 also adds a test harness which allows developers to run both XSS validation and performance tests.
        </para>
      </content>
    </section>

    <section>
      <!--h3-->
      <title>See Also:</title>
      <content>
        <para>
          <link xlink:href="7a006e82-8045-408f-b80c-628743f2c0ea">How To Use Anti-XSS Library</link>
        </para>
        <para>
          <link xlink:href="da9ed57c-53d1-45f1-812e-397f2d691bb7">MarkAntiXSSOutput Feature</link>
        </para>
        <para>
          <link xlink:href="9e14bafd-de75-498d-aeda-1cf3b9816bc6">The White List</link>
        </para>
        <para>
          <link xlink:href="18e42276-8f31-4d57-9571-6fa9c1f69372">Performance Data Sheet</link>
        </para>
        <para>&#160;</para>
      </content>
    </section>

    <relatedTopics>
      <!-- Supported Link Types
    
         All of the following linking mechanisms may be used in the topic's content 
         as well as in the related topics section.
    
    Linking to API reference documentation: 
    
		    <codeEntityReference>API reference ID</codeEntityReference>

    Linking to external resources and custom HTML topics: 

        <externalLink>
          <linkText>  Required hyperlink text  </linkText>
          <linkAlternateText>  Optional link title  </linkAlternateText>
          <linkUri>  Required URI  </linkUri>
        </externalLink>
    
    Linking to other conceptual topics: 
    
        <link xlink:href="GUID topic name (without file extension)" />
        
    Linking to named references:
    
        (Refer to the project's Help\Settings\links.xml file for more information)
    
        <link xref="id"> Optional link text </link>
        <link vref="id or URI"> Optional link text </link>
        
    -->

      <!-- Example Usage 

      <codeEntityReference>T:MyNamespace.MyClass</codeEntityReference>
      <codeEntityReference>P:MyNamespace.MyClass.MyProp</codeEntityReference>
      <codeEntityReference>M:System.IO.File.OpenText(System.String)</codeEntityReference>

      <externalLink>
        <linkText>Sandcastle Styles</linkText>
        <linkAlternateText>Sandcastle Styles on CodePlex</linkAlternateText>
        <linkUri>http://www.codeplex.com/SandcastleStyles</linkUri>
      </externalLink>

      <externalLink>
        <linkText>Change Log</linkText>
        <linkUri>ChangeLog.html</linkUri>
      </externalLink>

      <link xlink:href="2BFD9215-1216-403d-8C46-8420A4D01B83"/>
      
      <link xref="home">Our Home Page</link>
      <link vref="/controls/design.aspx">Control Architecture</link>
      -->
    </relatedTopics>

  </developerConceptualDocument>
</topic>