<?xml version="1.0" encoding="utf-8"?>
<topic id="f0bf6d6d-b437-4c9f-811f-6f23aad7654f" revisionNumber="0">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>This topic describes how to use Test Harness and execute the XSS validation tests.</para>
    </introduction>

    <section>
      <!--h1-->
      <title>XSS Validation Test Bench</title>
      <content>
        <para>
          AntiXSSTestBench.exe is a test harness windows console application. It uses .NET's HttpUtility.HtmlEncode()
          method for all the exploits which can be modified and tested against another
          encoding library. It also provides a framework for automating the validation
          of attack vectors, and can easily be extended to be used according to your specific requirements.
        </para>
        <para>When executed, AntiXSSTestBench displays this console menu:</para>
        <para>&#160;</para>
        <mediaLink>
          <image placement="center" xlink:href="TestHarness1"/>
        </mediaLink>
        <para>&#160;</para>
        <para>
          Choosing &#160;XSS
          Validation Test Bench executes an application which reads XSS exploits
          from the XSSAttacks.txt file stored in the same location as the your application's executable.
          &#160;XSS validation tests pass each XSS exploit through
          the Anti-XSS library, and writes the encoded output to the file output.txt as shown below:
        </para>
        <para>&#160;</para>
        <mediaLink>
          <image placement="center" xlink:href="TestHarness2"/>
        </mediaLink>
        <para>&#160;</para>
      </content>
    </section>

    <section>
      <!--h3-->
      <title>See Also:</title>
      <content>
        <para>
          <link xlink:href="a5caa272-b25d-4f02-8df5-8e42b01df4d9">Anti-XSS Test Harness</link>
        </para>
        <para>
          <link xlink:href="5b080580-36ad-4715-9c61-952509070730">Performance Test Bench</link>
        </para>
      </content>
    </section>


    <relatedTopics>
      <!-- Supported Link Types
    
         All of the following linking mechanisms may be used in the topic's content 
         as well as in the related topics section.
    
    Linking to API reference documentation: 
    
		    <codeEntityReference>API reference ID</codeEntityReference>

    Linking to external resources and custom HTML topics: 

        <externalLink>
          <linkText>  Required hyperlink text  </linkText>
          <linkAlternateText>  Optional link title  </linkAlternateText>
          <linkUri>  Required URI  </linkUri>
        </externalLink>
    
    Linking to other conceptual topics: 
    
        <link xlink:href="GUID topic name (without file extension)" />
        
    Linking to named references:
    
        (Refer to the project's Help\Settings\links.xml file for more information)
    
        <link xref="id"> Optional link text </link>
        <link vref="id or URI"> Optional link text </link>
        
    -->

      <!-- Example Usage 

      <codeEntityReference>T:MyNamespace.MyClass</codeEntityReference>
      <codeEntityReference>P:MyNamespace.MyClass.MyProp</codeEntityReference>
      <codeEntityReference>M:System.IO.File.OpenText(System.String)</codeEntityReference>

      <externalLink>
        <linkText>Sandcastle Styles</linkText>
        <linkAlternateText>Sandcastle Styles on CodePlex</linkAlternateText>
        <linkUri>http://www.codeplex.com/SandcastleStyles</linkUri>
      </externalLink>

      <externalLink>
        <linkText>Change Log</linkText>
        <linkUri>ChangeLog.html</linkUri>
      </externalLink>

      <link xlink:href="2BFD9215-1216-403d-8C46-8420A4D01B83"/>
      
      <link xref="home">Our Home Page</link>
      <link vref="/controls/design.aspx">Control Architecture</link>
      -->
    </relatedTopics>

  </developerConceptualDocument>
</topic>