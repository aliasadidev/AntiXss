<?xml version="1.0" encoding="utf-8"?>
<topic id="3e0cb435-94b3-41ba-b99a-aff0bf3ef4f2" revisionNumber="0">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>
        This topic will walk you through the steps to deploy Microsoft Anti-XSS Security Runtime Engine (SRE).
      </para>
    </introduction>

    <section>
      <!--h1-->
      <title>Deploying the Security Runtime Engine</title>
      <content>
        <para>
          The Security Runtime Engne (SRE) acts like a gatekeeper to protect ASP.NET
          web applications from different attack vectors. Currently the module protects
          applications from cross-site Scripting (XSS) attack by leveraging the
          Anti-XSS library. It inspects each control that is being reflected by
          ASP.NET and automatically encodes data of vulnerable controls in their
          appropriate context. Data being encoded for a specific control is configurable
          through an extensible XML file.
        </para>
      </content>
    </section>

    <section>
      <!--h2-->
      <title>Follow these steps to deploy the SRE:</title>
      <content>
        <list class="ordered">
          <listItem>
            <para>
              Use the ConfigGen.exe utility to create an antixssmodule.config
              file. &#160;Alternatively, you copy the default antixssmodule.config
              from the Security Runtime Engine\Module folder to your web application's root folder.
            </para>
          </listItem>
          <listItem>
            <para>
              Copy the dll's from the Security Runtime Engine\Module folder to your web application's \bin folder.
            </para>
          </listItem>
          <listItem>
            <para>
              Enable the SRE module by modifying your web.config file according to these examples:
            </para>
          </listItem>
        </list>
        <para>&#160;</para>
        <para><ui>In IIS 6.0 and IIS 7.0 in Classic .NET Application Pool</ui></para>
        <example>
          <code>
            <![CDATA[
<system.web>
    <httpModules>
        <add name="AntiXssModule" type="Microsoft.Security.Application.SecurityRuntimeEngine.AntiXssModule"/>
    </httpModules>
</system.web>]]>
          </code>
        </example>
        <para>&#160;</para>
        <para><ui>In IIS 7.0 pipeline mode</ui></para>
        <example>
          <code>
            <![CDATA[
<system.webServer>
    <modules>
        <add name="AntiXssModule" type="Microsoft.Security.Application.SecurityRuntimeEngine.AntiXssModule"/>
    </modules>
</system.webServer>]]>
          </code>
        </example>
        <para>&#160;</para>
      </content>
    </section>

    <section>
      <!--h3-->
      <title>See Also:</title>
      <content>
        <para>
          <link xlink:href="c97fadbd-9dd2-433f-b577-dbc499ce9e4b">Anti-XSS Security Runtime Engine</link>
        </para>
        <para>
          <link xlink:href="3e0cb435-94b3-41ba-b99a-aff0bf3ef4f2">Deploying Security Runtime Engine</link>
        </para>
        <para>
          <link xlink:href="ab2d273c-0d34-48cd-86ea-26749db4ff4f">SRE Configuration Tool</link>
        </para>
        <para>
          <link xlink:href="f4427194-6d84-407f-ab34-5f7d5d9f318f">SRE Configuartion Sample</link>
        </para>
        <para>
          <link xlink:href="f4ea6c72-740b-4efd-bbbf-195a41aa775f">SRE Performance Data Sheet</link>
        </para>
      </content>
    </section>

    <relatedTopics>
      <!-- Supported Link Types
    
         All of the following linking mechanisms may be used in the topic's content 
         as well as in the related topics section.
    
    Linking to API reference documentation: 
    
		    <codeEntityReference>API reference ID</codeEntityReference>

    Linking to external resources and custom HTML topics: 

        <externalLink>
          <linkText>  Required hyperlink text  </linkText>
          <linkAlternateText>  Optional link title  </linkAlternateText>
          <linkUri>  Required URI  </linkUri>
        </externalLink>
    
    Linking to other conceptual topics: 
    
        <link xlink:href="GUID topic name (without file extension)" />
        
    Linking to named references:
    
        (Refer to the project's Help\Settings\links.xml file for more information)
    
        <link xref="id"> Optional link text </link>
        <link vref="id or URI"> Optional link text </link>
        
    -->

      <!-- Example Usage 

      <codeEntityReference>T:MyNamespace.MyClass</codeEntityReference>
      <codeEntityReference>P:MyNamespace.MyClass.MyProp</codeEntityReference>
      <codeEntityReference>M:System.IO.File.OpenText(System.String)</codeEntityReference>

      <externalLink>
        <linkText>Sandcastle Styles</linkText>
        <linkAlternateText>Sandcastle Styles on CodePlex</linkAlternateText>
        <linkUri>http://www.codeplex.com/SandcastleStyles</linkUri>
      </externalLink>

      <externalLink>
        <linkText>Change Log</linkText>
        <linkUri>ChangeLog.html</linkUri>
      </externalLink>

      <link xlink:href="2BFD9215-1216-403d-8C46-8420A4D01B83"/>
      
      <link xref="home">Our Home Page</link>
      <link vref="/controls/design.aspx">Control Architecture</link>
      -->
    </relatedTopics>

  </developerConceptualDocument>
</topic>