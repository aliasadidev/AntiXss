<?xml version="1.0" encoding="utf-8"?>
<Report xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Analysis>
    <AnalysisEngineVersion>1.0.3000.16340</AnalysisEngineVersion>
    <StartTimeStamp>Thursday, October 30, 2008 2:46:19 PM</StartTimeStamp>
    <StopTimeStamp>Thursday, October 30, 2008 2:46:23 PM</StopTimeStamp>
    <ElapsedTime>00:00:03.9173917</ElapsedTime>
    <User>REDMOND\anilkr</User>
    <DataFlowSuperGraph>
      <Nodes>6752</Nodes>
      <Edges>9286</Edges>
    </DataFlowSuperGraph>
    <Targets>
      <Target>C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\AntiXSSUnitTests\bin\Release\AntiXSSUnitTests.dll</Target>
      <Target>C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\AntiXSSTestApp\bin\AntiXSSTestApp.dll</Target>
      <Target>C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SREUnitTests\bin\Release\UnitTests.dll</Target>
      <Target>C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\TestAntiXssModule\bin\TestAntiXssModule.dll</Target>
      <Target>C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\bin\SampleApp.dll</Target>
      <Target>C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\AXSSModule\bin\Release\AntiXssModule.dll</Target>
      <Target>C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\InstallerCustomAction\bin\Release\InstallerCustomAction.dll</Target>
      <Target>C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\AntiXSSTestBench\bin\Release\AntiXSSTestBench.exe</Target>
      <Target>C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\AntiXSSLibrary\bin\Release\AntiXSSLibrary.dll</Target>
      <Target>C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\ConfigGen\bin\Release\ConfigGen.exe</Target>
    </Targets>
  </Analysis>
  <Rules>
    <Rule>
      <Name>Process Command Execution</Name>
      <Identifier>ACESEC02</Identifier>
      <TotalResults>0</TotalResults>
      <Results />
    </Rule>
    <Rule>
      <Name>File Canonicalization</Name>
      <Identifier>ACESEC03</Identifier>
      <TotalResults>0</TotalResults>
      <Results />
    </Rule>
    <Rule>
      <Name>Exception Information</Name>
      <Identifier>ACESEC04</Identifier>
      <TotalResults>0</TotalResults>
      <Results />
    </Rule>
    <Rule>
      <Name>LDAP Injection</Name>
      <Identifier>ACESEC08</Identifier>
      <TotalResults>0</TotalResults>
      <Results />
    </Rule>
    <Rule>
      <Name>XPath Injection</Name>
      <Identifier>ACESEC07</Identifier>
      <TotalResults>0</TotalResults>
      <Results />
    </Rule>
    <Rule>
      <Name>SQL Injection</Name>
      <Identifier>ACESEC01</Identifier>
      <TotalResults>0</TotalResults>
      <Results />
    </Rule>
    <Rule>
      <Name>Redirection to User Controlled Site</Name>
      <Identifier>ACESEC06</Identifier>
      <TotalResults>1</TotalResults>
      <Results>
        <Result>
          <Identifier>008b94bd-f87b-479a-944e-e7010556bb47</Identifier>
          <ResulstHash>4AEGRLoNngnZ0nkyMFXpc57Iprw=</ResulstHash>
          <Color>8</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_QueryString()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Do not allow off-site redirections to absolute URLs that can
			be specified by the user.</Resolution>
          <ProblemDescription>A cross-site redirection vulnerability was found through
		a user controlled variable that enters the application at
		login.aspx.cs:64 through the variable stack0 which
		eventually leads to a cross-site redirection issue at
		login.aspx.cs:65.</ProblemDescription>
          <Transformations>
            <Origin line="64" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\login.aspx.cs">
              <StatementMethod>Feedback.login.Button1_Click</StatementMethod>
              <Statement>string tempUrl = AntiXss.UrlEncode(Request.QueryString["RedirectUrl"]);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="64" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\login.aspx.cs">
              <StatementMethod>Feedback.login.Button1_Click</StatementMethod>
              <Statement>string tempUrl = AntiXss.UrlEncode(Request.QueryString["RedirectUrl"]);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_QueryString</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="64" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\login.aspx.cs">
              <StatementMethod>Feedback.login.Button1_Click</StatementMethod>
              <Statement>string tempUrl = AntiXss.UrlEncode(Request.QueryString["RedirectUrl"]);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>tempUrl</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from NameValueCollection.get_Item</ActualInputVariable>
              <Method>Microsoft.InformationSecurity.CISF.AntiXss.UrlEncode</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="65" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\login.aspx.cs">
              <StatementMethod>Feedback.login.Button1_Click</StatementMethod>
              <Statement>Response.Redirect(tempUrl);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>tempUrl</InputVariable>
              <ActualInputVariable>tempUrl</ActualInputVariable>
              <Method>System.Web.HttpResponse.Redirect</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
      </Results>
    </Rule>
    <Rule>
      <Name>Cross-Site Scripting</Name>
      <Identifier>ACESEC05</Identifier>
      <TotalResults>22</TotalResults>
      <Results>
        <Result>
          <Identifier>234897dc-3565-4c3f-a0d9-e7f0fba7a8a3</Identifier>
          <ResulstHash>9U9yuY75XbIGLMJvWUErGCXYCvI=</ResulstHash>
          <Color>23</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>strInputText := stack0.{System.Web.UI.WebControls.TextBox}get_Text()</EntryPoint>
          <EntryVariable>strInputText</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		TestMe.aspx.cs:22 through the variable strInputText which
		eventually leads to a cross-site scripting issue at
		TestMe.aspx.cs:24.</ProblemDescription>
          <Transformations>
            <Origin line="22" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\AntiXSSTestApp\TestMe.aspx.cs">
              <StatementMethod>AntiXSSTestApp.TestMe.Submit_Click</StatementMethod>
              <Statement>string strInputText = txtBox1.Text;</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>strInputText</OutputVariable>
            </Origin>
            <CallResult line="24" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\AntiXSSTestApp\TestMe.aspx.cs">
              <StatementMethod>AntiXSSTestApp.TestMe.Submit_Click</StatementMethod>
              <Statement>Response.Write(AntiXss.HtmlAttributeEncode(strInputText, 932));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>strInputText</InputVariable>
              <ActualInputVariable>strInputText</ActualInputVariable>
              <Method>Microsoft.InformationSecurity.CISF.AntiXss.HtmlAttributeEncode</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="24" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\AntiXSSTestApp\TestMe.aspx.cs">
              <StatementMethod>AntiXSSTestApp.TestMe.Submit_Click</StatementMethod>
              <Statement>Response.Write(AntiXss.HtmlAttributeEncode(strInputText, 932));</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from AntiXss.HtmlAttributeEncode</ActualInputVariable>
              <Method>System.Web.HttpResponse.Write</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>f6503e77-164e-4e0f-a45f-a64758e1b0b3</Identifier>
          <ResulstHash>SPdXgpN+QumVETf9IGweFqTbDl0=</ResulstHash>
          <Color>23</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>strInputText := stack0.{System.Web.UI.WebControls.TextBox}get_Text()</EntryPoint>
          <EntryVariable>strInputText</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		TestMe.aspx.cs:22 through the variable strInputText which
		eventually leads to a cross-site scripting issue at
		TestMe.aspx.cs:25.</ProblemDescription>
          <Transformations>
            <Origin line="22" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\AntiXSSTestApp\TestMe.aspx.cs">
              <StatementMethod>AntiXSSTestApp.TestMe.Submit_Click</StatementMethod>
              <Statement>string strInputText = txtBox1.Text;</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>strInputText</OutputVariable>
            </Origin>
            <CallResult line="25" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\AntiXSSTestApp\TestMe.aspx.cs">
              <StatementMethod>AntiXSSTestApp.TestMe.Submit_Click</StatementMethod>
              <Statement>Response.Write(AntiXss.UrlEncode(strInputText, 932));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>strInputText</InputVariable>
              <ActualInputVariable>strInputText</ActualInputVariable>
              <Method>Microsoft.InformationSecurity.CISF.AntiXss.UrlEncode</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="25" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\AntiXSSTestApp\TestMe.aspx.cs">
              <StatementMethod>AntiXSSTestApp.TestMe.Submit_Click</StatementMethod>
              <Statement>Response.Write(AntiXss.UrlEncode(strInputText, 932));</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from AntiXss.UrlEncode</ActualInputVariable>
              <Method>System.Web.HttpResponse.Write</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>a912e124-454a-411d-afed-ddb0bd951b04</Identifier>
          <ResulstHash>oVmoHV+UEu1vSkmqHihuVgRo2jc=</ResulstHash>
          <Color>3</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.HttpRequest}get_QueryString()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		summary.aspx.cs:48 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		summary.aspx.cs:48.</ProblemDescription>
          <Transformations>
            <Origin line="48" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.Page_Load</StatementMethod>
              <Statement>lblSessionName.Text = Request.QueryString["sname"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="48" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.Page_Load</StatementMethod>
              <Statement>lblSessionName.Text = Request.QueryString["sname"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_QueryString</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="48" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.Page_Load</StatementMethod>
              <Statement>lblSessionName.Text = Request.QueryString["sname"];</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from NameValueCollection.get_Item</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>ebb77b0d-697f-4b75-8bfe-b61d82543cbb</Identifier>
          <ResulstHash>exJBNsCMmbte95ICL6pIeydn4lY=</ResulstHash>
          <Color>30</Color>
          <Vector>Database</Vector>
          <EntryPoint>stack1 := dr.{System.Data.DataRow}get_Item(stack1)</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		summary.aspx.cs:116 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		summary.aspx.cs:116.</ProblemDescription>
          <Transformations>
            <Origin line="116" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("CommentsLabel")).Text = AntiXss.HtmlEncode(dr["Comments"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="116" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("CommentsLabel")).Text = AntiXss.HtmlEncode(dr["Comments"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from DataRow.get_Item</ActualInputVariable>
              <Method>System.Object.ToString</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <CallResult line="116" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("CommentsLabel")).Text = AntiXss.HtmlEncode(dr["Comments"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from Object.ToString</ActualInputVariable>
              <Method>Microsoft.InformationSecurity.CISF.AntiXss.HtmlEncode</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="116" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("CommentsLabel")).Text = AntiXss.HtmlEncode(dr["Comments"].ToString());</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from AntiXss.HtmlEncode</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>55ec5b52-1434-48eb-8580-6b7d46d8250f</Identifier>
          <ResulstHash>LXgGna4CzEPur7cweMo1OIn/8+w=</ResulstHash>
          <Color>31</Color>
          <Vector>Database</Vector>
          <EntryPoint>stack1 := dr.{System.Data.DataRow}get_Item(stack1)</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		summary.aspx.cs:117 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		summary.aspx.cs:116.</ProblemDescription>
          <Transformations>
            <Origin line="117" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("NameLabel")).Text = AntiXss.HtmlEncode(dr["Name"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>dr</OutputVariable>
            </Origin>
            <Taints line="117" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("NameLabel")).Text = AntiXss.HtmlEncode(dr["Name"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>dr</OutputVariable>
              <InputVariable>dr</InputVariable>
              <ActualInputVariable>Return from DataRow.get_Item</ActualInputVariable>
            </Taints>
            <CallResult line="116" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("CommentsLabel")).Text = AntiXss.HtmlEncode(dr["Comments"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>dr</InputVariable>
              <ActualInputVariable>Return from DataRowView.get_Row</ActualInputVariable>
              <Method>System.Data.DataRow.get_Item</Method>
              <Argument>dr</Argument>
            </CallResult>
            <CallResult line="116" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("CommentsLabel")).Text = AntiXss.HtmlEncode(dr["Comments"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from DataRow.get_Item</ActualInputVariable>
              <Method>System.Object.ToString</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <CallResult line="116" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("CommentsLabel")).Text = AntiXss.HtmlEncode(dr["Comments"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from Object.ToString</ActualInputVariable>
              <Method>Microsoft.InformationSecurity.CISF.AntiXss.HtmlEncode</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="116" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("CommentsLabel")).Text = AntiXss.HtmlEncode(dr["Comments"].ToString());</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from AntiXss.HtmlEncode</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>88966cf7-aead-4255-92fe-9caccd5f0c51</Identifier>
          <ResulstHash>LXgGna4CzEPur7cweMo1OIn/8+w=</ResulstHash>
          <Color>32</Color>
          <Vector>Database</Vector>
          <EntryPoint>stack1 := dr.{System.Data.DataRow}get_Item(stack1)</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		summary.aspx.cs:118 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		summary.aspx.cs:116.</ProblemDescription>
          <Transformations>
            <Origin line="118" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("EmailLabel")).Text = AntiXss.HtmlEncode(dr["Email"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>dr</OutputVariable>
            </Origin>
            <Taints line="118" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("EmailLabel")).Text = AntiXss.HtmlEncode(dr["Email"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>dr</OutputVariable>
              <InputVariable>dr</InputVariable>
              <ActualInputVariable>Return from DataRow.get_Item</ActualInputVariable>
            </Taints>
            <CallResult line="116" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("CommentsLabel")).Text = AntiXss.HtmlEncode(dr["Comments"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>dr</InputVariable>
              <ActualInputVariable>Return from DataRowView.get_Row</ActualInputVariable>
              <Method>System.Data.DataRow.get_Item</Method>
              <Argument>dr</Argument>
            </CallResult>
            <CallResult line="116" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("CommentsLabel")).Text = AntiXss.HtmlEncode(dr["Comments"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from DataRow.get_Item</ActualInputVariable>
              <Method>System.Object.ToString</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <CallResult line="116" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("CommentsLabel")).Text = AntiXss.HtmlEncode(dr["Comments"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from Object.ToString</ActualInputVariable>
              <Method>Microsoft.InformationSecurity.CISF.AntiXss.HtmlEncode</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="116" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("CommentsLabel")).Text = AntiXss.HtmlEncode(dr["Comments"].ToString());</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from AntiXss.HtmlEncode</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>cd242830-66d2-47e6-a815-d6765795a4fb</Identifier>
          <ResulstHash>LXgGna4CzEPur7cweMo1OIn/8+w=</ResulstHash>
          <Color>30</Color>
          <Vector>Database</Vector>
          <EntryPoint>stack1 := dr.{System.Data.DataRow}get_Item(stack1)</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		summary.aspx.cs:116 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		summary.aspx.cs:117.</ProblemDescription>
          <Transformations>
            <Origin line="116" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("CommentsLabel")).Text = AntiXss.HtmlEncode(dr["Comments"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>dr</OutputVariable>
            </Origin>
            <Taints line="116" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("CommentsLabel")).Text = AntiXss.HtmlEncode(dr["Comments"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>dr</OutputVariable>
              <InputVariable>dr</InputVariable>
              <ActualInputVariable>Return from DataRow.get_Item</ActualInputVariable>
            </Taints>
            <CallResult line="117" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("NameLabel")).Text = AntiXss.HtmlEncode(dr["Name"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>dr</InputVariable>
              <ActualInputVariable>Return from DataRowView.get_Row</ActualInputVariable>
              <Method>System.Data.DataRow.get_Item</Method>
              <Argument>dr</Argument>
            </CallResult>
            <CallResult line="117" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("NameLabel")).Text = AntiXss.HtmlEncode(dr["Name"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from DataRow.get_Item</ActualInputVariable>
              <Method>System.Object.ToString</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <CallResult line="117" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("NameLabel")).Text = AntiXss.HtmlEncode(dr["Name"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from Object.ToString</ActualInputVariable>
              <Method>Microsoft.InformationSecurity.CISF.AntiXss.HtmlEncode</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="117" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("NameLabel")).Text = AntiXss.HtmlEncode(dr["Name"].ToString());</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from AntiXss.HtmlEncode</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>6bdc84ce-a503-4191-9e87-0a95d200c8f9</Identifier>
          <ResulstHash>exJBNsCMmbte95ICL6pIeydn4lY=</ResulstHash>
          <Color>31</Color>
          <Vector>Database</Vector>
          <EntryPoint>stack1 := dr.{System.Data.DataRow}get_Item(stack1)</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		summary.aspx.cs:117 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		summary.aspx.cs:117.</ProblemDescription>
          <Transformations>
            <Origin line="117" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("NameLabel")).Text = AntiXss.HtmlEncode(dr["Name"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="117" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("NameLabel")).Text = AntiXss.HtmlEncode(dr["Name"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from DataRow.get_Item</ActualInputVariable>
              <Method>System.Object.ToString</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <CallResult line="117" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("NameLabel")).Text = AntiXss.HtmlEncode(dr["Name"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from Object.ToString</ActualInputVariable>
              <Method>Microsoft.InformationSecurity.CISF.AntiXss.HtmlEncode</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="117" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("NameLabel")).Text = AntiXss.HtmlEncode(dr["Name"].ToString());</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from AntiXss.HtmlEncode</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>ba8ff7c3-a89b-4c6b-b1e1-64bed078c4ff</Identifier>
          <ResulstHash>LXgGna4CzEPur7cweMo1OIn/8+w=</ResulstHash>
          <Color>32</Color>
          <Vector>Database</Vector>
          <EntryPoint>stack1 := dr.{System.Data.DataRow}get_Item(stack1)</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		summary.aspx.cs:118 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		summary.aspx.cs:117.</ProblemDescription>
          <Transformations>
            <Origin line="118" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("EmailLabel")).Text = AntiXss.HtmlEncode(dr["Email"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>dr</OutputVariable>
            </Origin>
            <Taints line="118" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("EmailLabel")).Text = AntiXss.HtmlEncode(dr["Email"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>dr</OutputVariable>
              <InputVariable>dr</InputVariable>
              <ActualInputVariable>Return from DataRow.get_Item</ActualInputVariable>
            </Taints>
            <CallResult line="117" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("NameLabel")).Text = AntiXss.HtmlEncode(dr["Name"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>dr</InputVariable>
              <ActualInputVariable>Return from DataRowView.get_Row</ActualInputVariable>
              <Method>System.Data.DataRow.get_Item</Method>
              <Argument>dr</Argument>
            </CallResult>
            <CallResult line="117" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("NameLabel")).Text = AntiXss.HtmlEncode(dr["Name"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from DataRow.get_Item</ActualInputVariable>
              <Method>System.Object.ToString</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <CallResult line="117" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("NameLabel")).Text = AntiXss.HtmlEncode(dr["Name"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from Object.ToString</ActualInputVariable>
              <Method>Microsoft.InformationSecurity.CISF.AntiXss.HtmlEncode</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="117" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("NameLabel")).Text = AntiXss.HtmlEncode(dr["Name"].ToString());</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from AntiXss.HtmlEncode</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>9dd4529d-07c6-4218-a88f-a5c0a13d8277</Identifier>
          <ResulstHash>LXgGna4CzEPur7cweMo1OIn/8+w=</ResulstHash>
          <Color>30</Color>
          <Vector>Database</Vector>
          <EntryPoint>stack1 := dr.{System.Data.DataRow}get_Item(stack1)</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		summary.aspx.cs:116 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		summary.aspx.cs:118.</ProblemDescription>
          <Transformations>
            <Origin line="116" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("CommentsLabel")).Text = AntiXss.HtmlEncode(dr["Comments"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>dr</OutputVariable>
            </Origin>
            <Taints line="116" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("CommentsLabel")).Text = AntiXss.HtmlEncode(dr["Comments"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>dr</OutputVariable>
              <InputVariable>dr</InputVariable>
              <ActualInputVariable>Return from DataRow.get_Item</ActualInputVariable>
            </Taints>
            <CallResult line="118" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("EmailLabel")).Text = AntiXss.HtmlEncode(dr["Email"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>dr</InputVariable>
              <ActualInputVariable>Return from DataRowView.get_Row</ActualInputVariable>
              <Method>System.Data.DataRow.get_Item</Method>
              <Argument>dr</Argument>
            </CallResult>
            <CallResult line="118" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("EmailLabel")).Text = AntiXss.HtmlEncode(dr["Email"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from DataRow.get_Item</ActualInputVariable>
              <Method>System.Object.ToString</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <CallResult line="118" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("EmailLabel")).Text = AntiXss.HtmlEncode(dr["Email"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from Object.ToString</ActualInputVariable>
              <Method>Microsoft.InformationSecurity.CISF.AntiXss.HtmlEncode</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="118" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("EmailLabel")).Text = AntiXss.HtmlEncode(dr["Email"].ToString());</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from AntiXss.HtmlEncode</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>b30cd0b0-a32a-4317-9d2c-5856c0d03ac6</Identifier>
          <ResulstHash>LXgGna4CzEPur7cweMo1OIn/8+w=</ResulstHash>
          <Color>31</Color>
          <Vector>Database</Vector>
          <EntryPoint>stack1 := dr.{System.Data.DataRow}get_Item(stack1)</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		summary.aspx.cs:117 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		summary.aspx.cs:118.</ProblemDescription>
          <Transformations>
            <Origin line="117" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("NameLabel")).Text = AntiXss.HtmlEncode(dr["Name"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>dr</OutputVariable>
            </Origin>
            <Taints line="117" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("NameLabel")).Text = AntiXss.HtmlEncode(dr["Name"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>dr</OutputVariable>
              <InputVariable>dr</InputVariable>
              <ActualInputVariable>Return from DataRow.get_Item</ActualInputVariable>
            </Taints>
            <CallResult line="118" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("EmailLabel")).Text = AntiXss.HtmlEncode(dr["Email"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>dr</InputVariable>
              <ActualInputVariable>Return from DataRowView.get_Row</ActualInputVariable>
              <Method>System.Data.DataRow.get_Item</Method>
              <Argument>dr</Argument>
            </CallResult>
            <CallResult line="118" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("EmailLabel")).Text = AntiXss.HtmlEncode(dr["Email"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from DataRow.get_Item</ActualInputVariable>
              <Method>System.Object.ToString</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <CallResult line="118" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("EmailLabel")).Text = AntiXss.HtmlEncode(dr["Email"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from Object.ToString</ActualInputVariable>
              <Method>Microsoft.InformationSecurity.CISF.AntiXss.HtmlEncode</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="118" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("EmailLabel")).Text = AntiXss.HtmlEncode(dr["Email"].ToString());</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from AntiXss.HtmlEncode</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>29288f2a-966e-4e18-94c1-cd36740d036a</Identifier>
          <ResulstHash>exJBNsCMmbte95ICL6pIeydn4lY=</ResulstHash>
          <Color>32</Color>
          <Vector>Database</Vector>
          <EntryPoint>stack1 := dr.{System.Data.DataRow}get_Item(stack1)</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		summary.aspx.cs:118 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		summary.aspx.cs:118.</ProblemDescription>
          <Transformations>
            <Origin line="118" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("EmailLabel")).Text = AntiXss.HtmlEncode(dr["Email"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="118" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("EmailLabel")).Text = AntiXss.HtmlEncode(dr["Email"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from DataRow.get_Item</ActualInputVariable>
              <Method>System.Object.ToString</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <CallResult line="118" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("EmailLabel")).Text = AntiXss.HtmlEncode(dr["Email"].ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from Object.ToString</ActualInputVariable>
              <Method>Microsoft.InformationSecurity.CISF.AntiXss.HtmlEncode</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="118" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\summary.aspx.cs">
              <StatementMethod>Feedback.summary.repFeedback_ItemDataBound</StatementMethod>
              <Statement>((Label)e.Item.FindControl("EmailLabel")).Text = AntiXss.HtmlEncode(dr["Email"].ToString());</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from AntiXss.HtmlEncode</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>53d6d631-e3a1-4f39-99bb-ea3391f4bab8</Identifier>
          <ResulstHash>kNEQa5hI8WbD364LeP5C0y12avw=</ResulstHash>
          <Color>5</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.HttpRequest}get_QueryString()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		login.aspx.cs:40 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		login.aspx.cs:40.</ProblemDescription>
          <Transformations>
            <Origin line="40" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\login.aspx.cs">
              <StatementMethod>Feedback.login.Page_Load</StatementMethod>
              <Statement>lblVenue.Text = AntiXss.HtmlEncode(Request.QueryString["location"]);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="40" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\login.aspx.cs">
              <StatementMethod>Feedback.login.Page_Load</StatementMethod>
              <Statement>lblVenue.Text = AntiXss.HtmlEncode(Request.QueryString["location"]);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_QueryString</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <CallResult line="40" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\login.aspx.cs">
              <StatementMethod>Feedback.login.Page_Load</StatementMethod>
              <Statement>lblVenue.Text = AntiXss.HtmlEncode(Request.QueryString["location"]);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from NameValueCollection.get_Item</ActualInputVariable>
              <Method>Microsoft.InformationSecurity.CISF.AntiXss.HtmlEncode</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="40" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\login.aspx.cs">
              <StatementMethod>Feedback.login.Page_Load</StatementMethod>
              <Statement>lblVenue.Text = AntiXss.HtmlEncode(Request.QueryString["location"]);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from AntiXss.HtmlEncode</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>9fa637a6-a6f0-4ce7-994f-e3e050c49dd9</Identifier>
          <ResulstHash>PnfLw5l2UuQB1j5GFAaOM5H6bS0=</ResulstHash>
          <Color>9</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.HttpRequest}get_QueryString()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		ExcludedPage.aspx.cs:20 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		ExcludedPage.aspx.cs:20.</ProblemDescription>
          <Transformations>
            <Origin line="20" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\TestAntiXssModule\ExcludedDirectory\ExcludedPage.aspx.cs">
              <StatementMethod>TestAntiXssModule.ExcludedPage1.Page_Load</StatementMethod>
              <Statement>Label1.Text = Request.QueryString["q"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="20" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\TestAntiXssModule\ExcludedDirectory\ExcludedPage.aspx.cs">
              <StatementMethod>TestAntiXssModule.ExcludedPage1.Page_Load</StatementMethod>
              <Statement>Label1.Text = Request.QueryString["q"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_QueryString</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="20" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\TestAntiXssModule\ExcludedDirectory\ExcludedPage.aspx.cs">
              <StatementMethod>TestAntiXssModule.ExcludedPage1.Page_Load</StatementMethod>
              <Statement>Label1.Text = Request.QueryString["q"];</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from NameValueCollection.get_Item</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>f30efbe0-bfa3-43c3-b3e5-00747c22b4ab</Identifier>
          <ResulstHash>LJdnaV50aY4R2SY4MfpMoGlfJOg=</ResulstHash>
          <Color>11</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.HttpRequest}get_QueryString()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		Default.aspx.cs:27 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		Default.aspx.cs:27.</ProblemDescription>
          <Transformations>
            <Origin line="27" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\TestAntiXssModule\Default.aspx.cs">
              <StatementMethod>TestAntiXssModule._Default.Page_Load</StatementMethod>
              <Statement>Label1.Text = Request.QueryString["q"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="27" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\TestAntiXssModule\Default.aspx.cs">
              <StatementMethod>TestAntiXssModule._Default.Page_Load</StatementMethod>
              <Statement>Label1.Text = Request.QueryString["q"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_QueryString</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="27" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\TestAntiXssModule\Default.aspx.cs">
              <StatementMethod>TestAntiXssModule._Default.Page_Load</StatementMethod>
              <Statement>Label1.Text = Request.QueryString["q"];</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from NameValueCollection.get_Item</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>5ef34444-a9d9-4477-8a79-6e8ef61c6706</Identifier>
          <ResulstHash>PBJuri2YjR9RmJy/Td0EfnaHi7Q=</ResulstHash>
          <Color>14</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.HttpRequest}get_QueryString()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		ExcludedPage.aspx.cs:20 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		ExcludedPage.aspx.cs:20.</ProblemDescription>
          <Transformations>
            <Origin line="20" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\TestAntiXssModule\ExcludedPage.aspx.cs">
              <StatementMethod>TestAntiXssModule.ExcludedPage.Page_Load</StatementMethod>
              <Statement>Label1.Text = Request.QueryString["q"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="20" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\TestAntiXssModule\ExcludedPage.aspx.cs">
              <StatementMethod>TestAntiXssModule.ExcludedPage.Page_Load</StatementMethod>
              <Statement>Label1.Text = Request.QueryString["q"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_QueryString</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="20" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\TestAntiXssModule\ExcludedPage.aspx.cs">
              <StatementMethod>TestAntiXssModule.ExcludedPage.Page_Load</StatementMethod>
              <Statement>Label1.Text = Request.QueryString["q"];</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from NameValueCollection.get_Item</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>1b91b5d9-e0f7-430d-a3c3-8f4a72ede43a</Identifier>
          <ResulstHash>9J4CbdQ7HDZP9kM0od4dBo7XtFE=</ResulstHash>
          <Color>15</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.HttpRequest}get_QueryString()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		MultipleControls.aspx.cs:20 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		MultipleControls.aspx.cs:20.</ProblemDescription>
          <Transformations>
            <Origin line="20" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\TestAntiXssModule\MultipleControls.aspx.cs">
              <StatementMethod>TestAntiXssModule.MultipleControls.Page_Load</StatementMethod>
              <Statement>Label1.Text = Request.QueryString["q"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="20" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\TestAntiXssModule\MultipleControls.aspx.cs">
              <StatementMethod>TestAntiXssModule.MultipleControls.Page_Load</StatementMethod>
              <Statement>Label1.Text = Request.QueryString["q"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_QueryString</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="20" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\TestAntiXssModule\MultipleControls.aspx.cs">
              <StatementMethod>TestAntiXssModule.MultipleControls.Page_Load</StatementMethod>
              <Statement>Label1.Text = Request.QueryString["q"];</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from NameValueCollection.get_Item</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>8cbf1814-1cd0-49bd-bbf3-e94d913fb9c7</Identifier>
          <ResulstHash>vUfI1aG70067G5CmYURaUilphS0=</ResulstHash>
          <Color>20</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.HttpRequest}get_QueryString()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		SubClassedLabel.aspx.cs:20 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		SubClassedLabel.aspx.cs:20.</ProblemDescription>
          <Transformations>
            <Origin line="20" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\TestAntiXssModule\SubClassedLabel.aspx.cs">
              <StatementMethod>TestAntiXssModule.SubClassedLabel.Page_Load</StatementMethod>
              <Statement>RedLabel1.Text = Request.QueryString["q"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="20" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\TestAntiXssModule\SubClassedLabel.aspx.cs">
              <StatementMethod>TestAntiXssModule.SubClassedLabel.Page_Load</StatementMethod>
              <Statement>RedLabel1.Text = Request.QueryString["q"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_QueryString</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="20" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\TestAntiXssModule\SubClassedLabel.aspx.cs">
              <StatementMethod>TestAntiXssModule.SubClassedLabel.Page_Load</StatementMethod>
              <Statement>RedLabel1.Text = Request.QueryString["q"];</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from NameValueCollection.get_Item</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>d85895c5-014d-490c-a25b-8fe9c4ece0fb</Identifier>
          <ResulstHash>W88zr3jZMz2CMMphfk4pJ+tjDZY=</ResulstHash>
          <Color>6</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_QueryString()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		login.aspx.cs:42 through the variable stack0 which
		eventually leads to a cross-site scripting issue at
		login.aspx.cs:46.</ProblemDescription>
          <Transformations>
            <Origin line="42" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\login.aspx.cs">
              <StatementMethod>Feedback.login.Page_Load</StatementMethod>
              <Statement>venueStyle = Request.QueryString["style"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="42" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\login.aspx.cs">
              <StatementMethod>Feedback.login.Page_Load</StatementMethod>
              <Statement>venueStyle = Request.QueryString["style"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>venueStyle</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_QueryString</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="46" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\login.aspx.cs">
              <StatementMethod>Feedback.login.Page_Load</StatementMethod>
              <Statement>lblVenue.Attributes["class"] = AntiXss.HtmlAttributeEncode(venueStyle);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack2</OutputVariable>
              <InputVariable>venueStyle</InputVariable>
              <ActualInputVariable>venueStyle</ActualInputVariable>
              <Method>Microsoft.InformationSecurity.CISF.AntiXss.HtmlAttributeEncode</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="46" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\SampleApp\login.aspx.cs">
              <StatementMethod>Feedback.login.Page_Load</StatementMethod>
              <Statement>lblVenue.Attributes["class"] = AntiXss.HtmlAttributeEncode(venueStyle);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack2</OutputVariable>
              <InputVariable>stack2</InputVariable>
              <ActualInputVariable>Return from AntiXss.HtmlAttributeEncode</ActualInputVariable>
              <Method>System.Web.UI.AttributeCollection.set_Item</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>427d7b62-6512-497c-bae4-b6447e9b2cac</Identifier>
          <ResulstHash>lCXAFCu7FmGQ+MSjczRbYJKBsFI=</ResulstHash>
          <Color>16</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.HttpRequest}get_QueryString()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		MultipleControls.aspx.cs:21 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		MultipleControls.aspx.cs:21.</ProblemDescription>
          <Transformations>
            <Origin line="21" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\TestAntiXssModule\MultipleControls.aspx.cs">
              <StatementMethod>TestAntiXssModule.MultipleControls.Page_Load</StatementMethod>
              <Statement>LinkButton1.Text = Request.QueryString["q"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="21" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\TestAntiXssModule\MultipleControls.aspx.cs">
              <StatementMethod>TestAntiXssModule.MultipleControls.Page_Load</StatementMethod>
              <Statement>LinkButton1.Text = Request.QueryString["q"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_QueryString</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="21" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\TestAntiXssModule\MultipleControls.aspx.cs">
              <StatementMethod>TestAntiXssModule.MultipleControls.Page_Load</StatementMethod>
              <Statement>LinkButton1.Text = Request.QueryString["q"];</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from NameValueCollection.get_Item</ActualInputVariable>
              <Method>System.Web.UI.WebControls.LinkButton.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>27f3a8b5-edb2-484a-a198-dbd7ad40bdbe</Identifier>
          <ResulstHash>8bDv8cjPjMvPUvc41a3TB2J5PIA=</ResulstHash>
          <Color>18</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.HttpRequest}get_QueryString()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		MultipleControls.aspx.cs:24 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		MultipleControls.aspx.cs:24.</ProblemDescription>
          <Transformations>
            <Origin line="24" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\TestAntiXssModule\MultipleControls.aspx.cs">
              <StatementMethod>TestAntiXssModule.MultipleControls.Page_Load</StatementMethod>
              <Statement>RadioButton1.Text = Request.QueryString["q"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="24" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\TestAntiXssModule\MultipleControls.aspx.cs">
              <StatementMethod>TestAntiXssModule.MultipleControls.Page_Load</StatementMethod>
              <Statement>RadioButton1.Text = Request.QueryString["q"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_QueryString</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="24" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\TestAntiXssModule\MultipleControls.aspx.cs">
              <StatementMethod>TestAntiXssModule.MultipleControls.Page_Load</StatementMethod>
              <Statement>RadioButton1.Text = Request.QueryString["q"];</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from NameValueCollection.get_Item</ActualInputVariable>
              <Method>System.Web.UI.WebControls.CheckBox.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>12cdd9b1-8f6f-4fa2-841a-a44567169c1e</Identifier>
          <ResulstHash>8bDv8cjPjMvPUvc41a3TB2J5PIA=</ResulstHash>
          <Color>19</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.HttpRequest}get_QueryString()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		MultipleControls.aspx.cs:25 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		MultipleControls.aspx.cs:25.</ProblemDescription>
          <Transformations>
            <Origin line="25" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\TestAntiXssModule\MultipleControls.aspx.cs">
              <StatementMethod>TestAntiXssModule.MultipleControls.Page_Load</StatementMethod>
              <Statement>CheckBox1.Text = Request.QueryString["q"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="25" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\TestAntiXssModule\MultipleControls.aspx.cs">
              <StatementMethod>TestAntiXssModule.MultipleControls.Page_Load</StatementMethod>
              <Statement>CheckBox1.Text = Request.QueryString["q"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_QueryString</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="25" file="C:\Work\Projects\AntiXss\Internal\V3.0\Source\AntiXSS\TestAntiXssModule\MultipleControls.aspx.cs">
              <StatementMethod>TestAntiXssModule.MultipleControls.Page_Load</StatementMethod>
              <Statement>CheckBox1.Text = Request.QueryString["q"];</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from NameValueCollection.get_Item</ActualInputVariable>
              <Method>System.Web.UI.WebControls.CheckBox.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
      </Results>
    </Rule>
  </Rules>
</Report>